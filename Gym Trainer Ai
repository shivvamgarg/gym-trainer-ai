import { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { motion } from "framer-motion";
import { Line } from "react-chartjs-2";
import { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement } from "chart.js";
import useSound from "use-sound";

ChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);

export default function GymTrainerAI() {
  const [day, setDay] = useState(null);
  const [workout, setWorkout] = useState(null);
  const [progress, setProgress] = useState(0);
  const [streak, setStreak] = useState(0);
  const [progressHistory, setProgressHistory] = useState([]);
  const [customWorkout, setCustomWorkout] = useState([]);
  const [timer, setTimer] = useState(30);
  const [isTimerRunning, setIsTimerRunning] = useState(false);
  const [workoutHistory, setWorkoutHistory] = useState([]);
  const [aiTips, setAiTips] = useState("");

  const days = ["Chest", "Back", "Legs", "Arms", "Shoulders", "Full Body"];

  const workouts = {
    "Chest": ["Bench Press - 4 sets", "Incline Dumbbell Press - 4 sets", "Cable Fly - 3 sets"],
    "Back": ["Pull-ups - 3 sets", "Deadlifts - 4 sets", "Bent-over Rows - 4 sets"],
    "Legs": ["Squats - 4 sets", "Leg Press - 4 sets", "Lunges - 3 sets"],
    "Arms": ["Bicep Curls - 4 sets", "Tricep Dips - 4 sets", "Hammer Curls - 3 sets"],
    "Shoulders": ["Overhead Press - 4 sets", "Lateral Raises - 3 sets", "Face Pulls - 3 sets"],
    "Full Body": ["Burpees - 3 sets", "Squats - 4 sets", "Deadlifts - 3 sets", "Push-ups - 4 sets"]
  };

  useEffect(() => {
    let interval;
    if (isTimerRunning && timer > 0) {
      interval = setInterval(() => {
        setTimer((prev) => prev - 1);
      }, 1000);
    } else if (timer === 0) {
      setIsTimerRunning(false);
      alert("Time's up! Move to the next exercise.");
    }
    return () => clearInterval(interval);
  }, [isTimerRunning, timer]);

  const aiWorkoutTips = [
    "Keep your back straight during deadlifts!",
    "Slow and controlled reps are better for muscle growth.",
    "Always warm up before starting heavy lifts!",
    "Hydration is key to muscle recovery.",
    "Proper form is more important than heavy weights."
  ];

  const handleSelectDay = (selectedDay) => {
    setDay(selectedDay);
    setWorkout(workouts[selectedDay]);
    setAiTips(aiWorkoutTips[Math.floor(Math.random() * aiWorkoutTips.length)]);
  };

  const addCustomExercise = (exercise) => {
    setCustomWorkout([...customWorkout, exercise]);
  };

  const completeWorkout = () => {
    setProgress((prev) => Math.min(prev + 20, 100));
    setStreak((prev) => prev + 1);
    setProgressHistory([...progressHistory, progress + 20]);
    setWorkoutHistory([...workoutHistory, { day, workout: [...workout, ...customWorkout] }]);
  };

  const startTimer = () => {
    setIsTimerRunning(true);
    setTimer(30);
  };

  return (
    <motion.div 
      initial={{ opacity: 0, y: -20 }} 
      animate={{ opacity: 1, y: 0 }} 
      transition={{ duration: 0.5 }}
      className="p-6 max-w-lg mx-auto text-center"
    >
      <h1 className="text-2xl font-bold mb-4">🏋️ Gym Trainer AI</h1>
      {!day ? (
        <motion.div initial={{ scale: 0.8 }} animate={{ scale: 1 }} transition={{ duration: 0.3 }}>
          <h2 className="text-lg font-semibold mb-2">What day is it?</h2>
          <div className="flex flex-wrap justify-center gap-4">
            {days.map((d) => (
              <Button key={d} onClick={() => handleSelectDay(d)}>{d}</Button>
            ))}
          </div>
        </motion.div>
      ) : (
        <Card className="p-4 shadow-lg">
          <CardContent>
            <h2 className="text-xl font-semibold">{day} Workout</h2>
            <p className="italic text-sm">💡 AI Tip: {aiTips}</p>
            <ul className="text-left mt-2">
              {workout.map((exercise, index) => (
                <li key={index} className="py-1">✅ {exercise}</li>
              ))}
            </ul>
            <h3 className="text-lg font-semibold mt-4">Add Custom Exercise</h3>
            <input type="text" placeholder="Enter exercise" className="border p-2 rounded w-full mt-2" id="customExercise" />
            <Button onClick={() => addCustomExercise(document.getElementById('customExercise').value)} className="mt-2">Add Exercise</Button>
            <ul className="text-left mt-2">
              {customWorkout.map((exercise, index) => (
                <li key={index} className="py-1">✅ {exercise}</li>
              ))}
            </ul>
            <h3 className="text-lg font-semibold mt-4">⏳ Exercise Timer: {timer}s</h3>
            {!isTimerRunning && <Button onClick={startTimer} className="mt-2">Start Timer</Button>}
            <Progress value={progress} className="mt-4" />
            <p className="mt-2">Progress: {progress}%</p>
            <p className="mt-2 font-semibold text-green-600">🔥 Streak: {streak} days</p>
            <Button onClick={completeWorkout} className="mt-3">Complete Workout</Button>
          </CardContent>
        </Card>
      )}
    </motion.div>
  );
}
